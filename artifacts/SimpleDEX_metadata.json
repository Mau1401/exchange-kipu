{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenB",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"name": "LiquidityAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"name": "LiquidityRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountAIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountBOut",
						"type": "uint256"
					}
				],
				"name": "SwappedAforB",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountAIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountBOut",
						"type": "uint256"
					}
				],
				"name": "SwappedBforA",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"name": "addLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "getPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "poolA",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "poolB",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"name": "removeLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountAIn",
						"type": "uint256"
					}
				],
				"name": "swapAforB",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountBIn",
						"type": "uint256"
					}
				],
				"name": "swapBforA",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenA",
				"outputs": [
					{
						"internalType": "contract TokenA",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenB",
				"outputs": [
					{
						"internalType": "contract TokenB",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addLiquidity(uint256,uint256)": {
					"details": "Agrega liquidez ",
					"params": {
						"amountA": "Cantidad de TokenA a depositar.",
						"amountB": "Cantidad de TokenB a depositar."
					}
				},
				"getPrice(address)": {
					"details": "Relacion de precios de un token con respecto al otro",
					"params": {
						"_token": "Direccion del token a consultar"
					},
					"returns": {
						"price": "Precio del token en temrinos del otro"
					}
				},
				"removeLiquidity(uint256,uint256)": {
					"details": "Retirar liquidez del pool",
					"params": {
						"amountA": "Cantidad de TokenA a retirar",
						"amountB": "Cantidad de TokenB a retirar"
					}
				},
				"swapAforB(uint256)": {
					"details": "Intercambia TokenA por TokenB",
					"params": {
						"amountAIn": "Cantidad de TokenA a intercambiar"
					}
				},
				"swapBforA(uint256)": {
					"details": "Intercambia TokenB por TokenA",
					"params": {
						"amountBIn": "Cantidad de TokenB a intercambiar"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SimpleDEX.sol": "SimpleDEX"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/SimpleDEX.sol": {
			"keccak256": "0xb17138704cac2279b0aad6d662b615848efedc96cf64efd616aacdecf8e8ec39",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bc76bc024719c5a8caaa6e8fe0465c8f96686f10a273ac6704e5bbb5d0bae36",
				"dweb:/ipfs/Qme9cSiobsaB7C3E4B3b1XL3dBCrnydLcpxidv5bGr2uEx"
			]
		},
		"contracts/TokenA.sol": {
			"keccak256": "0xb68e3d220b5bc69ba44b170a82bfc89f929b9be6816cd009cc49edeea7eb6147",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e5886f302f143b16dfe3a6649fdb6e3bcd73b078a4fe045400e97d506557e2a",
				"dweb:/ipfs/QmbAp98TGUSPEAvw5hjkfH23tWbYxN6zZxwmfgTjMjZSb4"
			]
		},
		"contracts/TokenB.sol": {
			"keccak256": "0x2c69a7abc4db591fa8fc19f5307bd3e0566d955b47c8245ca9f83b34b7268728",
			"license": "MIT",
			"urls": [
				"bzz-raw://971836a35cc8a5074837640e40b6bf7e569ae1d4b90e36ae3a68b5f6725204f9",
				"dweb:/ipfs/QmUcbK5yRmZpqYPfTXiRTazVR7ow7kgpRXcdQYMVRjQjJS"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.0/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
			"license": "MIT",
			"urls": [
				"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
				"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.0/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
				"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.0/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		}
	},
	"version": 1
}