{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenB",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"name": "LiquidityAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"name": "LiquidityRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountAIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountBOut",
						"type": "uint256"
					}
				],
				"name": "SwappedAforB",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountAIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountBOut",
						"type": "uint256"
					}
				],
				"name": "SwappedBforA",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"name": "addLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "getPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "poolA",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "poolB",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"name": "removeLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountAIn",
						"type": "uint256"
					}
				],
				"name": "swapAforB",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountBIn",
						"type": "uint256"
					}
				],
				"name": "swapBforA",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenA",
				"outputs": [
					{
						"internalType": "contract TokenA",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenB",
				"outputs": [
					{
						"internalType": "contract TokenB",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addLiquidity(uint256,uint256)": {
					"details": "Agrega liquidez ",
					"params": {
						"amountA": "Cantidad de TokenA a depositar.",
						"amountB": "Cantidad de TokenB a depositar."
					}
				},
				"getPrice(address)": {
					"details": "Relacion de precios de un token con respecto al otro",
					"params": {
						"_token": "Direccion del token a consultar"
					},
					"returns": {
						"price": "Precio del token en temrinos del otro"
					}
				},
				"removeLiquidity(uint256,uint256)": {
					"details": "Retirar liquidez del pool",
					"params": {
						"amountA": "Cantidad de TokenA a retirar",
						"amountB": "Cantidad de TokenB a retirar"
					}
				},
				"swapAforB(uint256)": {
					"details": "Intercambia TokenA por TokenB",
					"params": {
						"amountAIn": "Cantidad de TokenA a intercambiar"
					}
				},
				"swapBforA(uint256)": {
					"details": "Intercambia TokenB por TokenA",
					"params": {
						"amountBIn": "Cantidad de TokenB a intercambiar"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SimpleDEX.sol": "SimpleDEX"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
			"license": "MIT",
			"urls": [
				"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
				"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a",
			"license": "MIT",
			"urls": [
				"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a",
				"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
			"license": "MIT",
			"urls": [
				"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
				"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
			"license": "MIT",
			"urls": [
				"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
				"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/SimpleDEX.sol": {
			"keccak256": "0xb17138704cac2279b0aad6d662b615848efedc96cf64efd616aacdecf8e8ec39",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bc76bc024719c5a8caaa6e8fe0465c8f96686f10a273ac6704e5bbb5d0bae36",
				"dweb:/ipfs/Qme9cSiobsaB7C3E4B3b1XL3dBCrnydLcpxidv5bGr2uEx"
			]
		},
		"contracts/TokenA.sol": {
			"keccak256": "0x24c822ae1bf51f5928e5fd83d55d5019f8a7f0caa1300e68db6321c5633e1482",
			"license": "MIT",
			"urls": [
				"bzz-raw://86395070d45dd8550ba78ef93dd781d5daf5a11fe4de956e7f603965df05b5e8",
				"dweb:/ipfs/QmYL629waDUKMsT1dRNCaASFs31ksx2qu95U7wiVWQ683B"
			]
		},
		"contracts/TokenB.sol": {
			"keccak256": "0x1b54c14b465af9ae6fb214ea6e5bb061973864d70b049b38f24ccd60ff1656bc",
			"license": "MIT",
			"urls": [
				"bzz-raw://8913ba0c4c205dc769790110f758f29b3e7100e0dbeb22ba4b887d6d12826662",
				"dweb:/ipfs/QmULh88TmoY58XV7G4h5sCKH5dau5tHoU3rzFx182AHW55"
			]
		}
	},
	"version": 1
}